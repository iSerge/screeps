module.exports = {"version":3,"sources":["webpack/bootstrap 8cc575a790f8ab4db727","./screeps-typescript-profiler/index.ts","external \"lodash\"","./src/utils.ts","./src/main.ts","./screeps-typescript-profiler/Profiler/Profiler.ts","./src/limits.ts","./src/role.builder.ts","./src/role.carrier.ts","./src/role.claimer.ts","./src/role.harvester.ts","./src/role.upgrader.ts","./src/roles.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8cc575a790f8ab4db727","export * from \"./Profiler/Profiler\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--3-0!./~/source-map-loader!./screeps-typescript-profiler/index.ts","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 1\n// module chunks = 0","/*\r\n * Module code goes here. Use 'module.exports' to export things:\r\n * module.exports.thing = 'a thing';\r\n *\r\n * You can import it from another modules like this:\r\n * var mod = require('utils');\r\n * mod.thing == 'a thing'; // true\r\n */\r\n\r\nimport * as _ from \"lodash\";\r\n\r\nimport {limits} from \"./limits\";\r\n\r\nimport { profile } from \"../screeps-typescript-profiler\";\r\n\r\nexport const Messages = {\r\n    BUILD: \"\\uD83D\\uDEA7 build\",\r\n    CONSTRUCT_SYM: \"\\uD83D\\uDEE0\",\r\n    DISTRIBUTE: \"\\u2194 distr\",\r\n    HARVEST: \"\\uD83D\\uDD04 harvest\",\r\n    PICKUP: \"\\u2B06 pickup\",\r\n    UPGRADE: \"\\u26A1 upgrade\"\r\n};\r\n\r\n@profile\r\nexport class Utils {\r\n    /**\r\n     * @function\r\n     * @param {Creep} creep\r\n     * @param {ConstructionSite} site\r\n     * @return {number}\r\n     */\r\n    private static buildPriority(creep: Creep, site: ConstructionSite) {\r\n        let priority;\r\n        switch (site.structureType) {\r\n            case STRUCTURE_SPAWN:\r\n                priority = 1;\r\n                break;\r\n            case STRUCTURE_EXTENSION:\r\n                priority = 2;\r\n                break;\r\n            case STRUCTURE_CONTAINER:\r\n                priority = 3;\r\n                break;\r\n            case STRUCTURE_LINK:\r\n                priority = 4;\r\n                break;\r\n            case STRUCTURE_TOWER:\r\n                priority = 5;\r\n                break;\r\n            case STRUCTURE_STORAGE:\r\n                priority = 6;\r\n                break;\r\n            default:\r\n                priority = 7;\r\n                break;\r\n        }\r\n\r\n        return creep.memory.operateInRoom === site.pos.roomName ? priority : priority + 20;\r\n    }\r\n\r\n    public clearMemory() {\r\n        _.forOwn(Memory.creeps, (creep, name: string) => {\r\n            if (!Game.creeps.hasOwnProperty(name)) {\r\n                if (creep.target) {\r\n                    delete Memory.harvestedSources[creep.target];\r\n                }\r\n\r\n                delete Memory.creeps[name];\r\n            }\r\n        });\r\n\r\n        _.forOwn(Memory.rooms, (room, name: string) => {\r\n            if (!Game.rooms.hasOwnProperty(name)) {\r\n                delete Memory.rooms[name];\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * @param {Room} room\r\n     * @param {object} object\r\n     * @param {string} object.id\r\n     */\r\n    public enqueueStructure(room: Room, object: Structure) {\r\n        if (_.isUndefined(object)) {\r\n            return;\r\n        }\r\n\r\n        if (!_.includes(room.memory.repairQueue, object.id)) {\r\n            room.memory.repairQueue.push(object.id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @param {Creep} creep\r\n     * @return {undefined|ConstructionSite}\r\n     */\r\n    public findConstructionSite(creep: Creep) {\r\n        return _.sortBy(Game.constructionSites, [(site: ConstructionSite) => {\r\n            return Utils.buildPriority(creep, site);\r\n        }])[0];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Creep} creep\r\n     * @param {Resource|Source|Structure} target\r\n     */\r\n    public getEnergy(creep: Creep, target: Resource | Source | Structure) {\r\n        let result;\r\n        if (target instanceof Resource) {\r\n            result = creep.pickup(target);\r\n            if (result === OK) {\r\n                creep.memory.energyTarget = \"\";\r\n            }\r\n        } else if (target instanceof Source) {\r\n            result = creep.harvest(target);\r\n        } else {\r\n            result = creep.withdraw(target, RESOURCE_ENERGY);\r\n            if (result === OK) {\r\n                creep.memory.energyTarget = \"\";\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Creep} creep\r\n     * @return {RoomObject}\r\n     */\r\n    public getEnergyStorageTarget(creep: Creep) {\r\n        let target: Structure | null = Game.getObjectById(creep.memory.energyTarget);\r\n\r\n        if (!target) {\r\n            let targets = creep.room.find(FIND_DROPPED_RESOURCES, {\r\n                filter: (res: Resource) => {\r\n                    return res.resourceType === RESOURCE_ENERGY;\r\n                }\r\n            });\r\n\r\n            targets = targets.concat(creep.room.find(FIND_STRUCTURES, {\r\n                filter: (struct: StructureStorage | StructureLink | StructureContainer) => {\r\n                    return ((struct.structureType === STRUCTURE_STORAGE ||\r\n                        struct.structureType === STRUCTURE_CONTAINER) &&\r\n                        0 < struct.store[RESOURCE_ENERGY]) ||\r\n                        (struct.structureType === STRUCTURE_LINK && 0 < struct.energy);\r\n                }\r\n            }));\r\n\r\n            target = creep.pos.findClosestByPath(targets, {\r\n                maxOps: 1000\r\n            }) as Structure;\r\n        }\r\n\r\n        if (!target) {\r\n            target = creep.pos.findClosestByPath(FIND_SOURCES);\r\n        }\r\n\r\n        if (target) {\r\n            creep.memory.energyTarget = target.id;\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Creep} creep\r\n     * @param {RoomPosition} target\r\n     */\r\n    public moveTo(creep: Creep, target: RoomPosition) {\r\n        if (ERR_NOT_FOUND === creep.moveTo(target, {\r\n                noPathFinding: true,\r\n                visualizePathStyle: {stroke: \"#ffffff\"}\r\n            })) {\r\n            creep.moveTo(target, {\r\n                reusePath: 20,\r\n                visualizePathStyle: {stroke: \"#ffffff\"}\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Creep} creep\r\n     */\r\n    public navigateToDesignatedRoom(creep: Creep) {\r\n        return creep.memory.operateInRoom !== creep.pos.roomName;\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @param {Creep} creep\r\n     * @param {boolean} own\r\n     * @return {null|RoomObject}\r\n     */\r\n    public shiftStructure(creep: Creep, own: boolean): Structure | null {\r\n        const roomName = creep.memory.operateInRoom;\r\n        if (0 < Memory.rooms[roomName].repairQueue.length) {\r\n            let id = Game.getObjectById(Memory.rooms[roomName].repairQueue[0]);\r\n            while (!id) {\r\n                Memory.rooms[roomName].repairQueue.shift();\r\n                id = Game.getObjectById(Memory.rooms[roomName].repairQueue[0]);\r\n            }\r\n        }\r\n\r\n        const needsRepair: string | undefined = _.find(Memory.rooms[roomName].repairQueue, (id: string) => {\r\n            const struct: RoomObject | null = _.isUndefined(id) ? null : Game.getObjectById(id);\r\n            return struct && (!own || struct.pos.roomName === creep.memory.operateInRoom);\r\n        });\r\n\r\n        if (_.isUndefined(needsRepair)) {\r\n            return null;\r\n        }\r\n\r\n        Memory.rooms[roomName].repairQueue = _.filter(Memory.rooms[roomName].repairQueue, (id) => id !== needsRepair);\r\n\r\n        return Game.getObjectById(needsRepair);\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * Checks if creep stans on road and if not initiates road building\r\n     *\r\n     * @param {Creep} creep\r\n     */\r\n    public tryBuildRoad(creep: Creep) {\r\n        if (Memory.autoBuildRoads) {\r\n            const road = _.filter(creep.room.lookAt(creep.pos), (obj: LookAtResult) => {\r\n\r\n                return obj && obj.structure &&\r\n                    ((obj.type === LOOK_STRUCTURES && obj.structure.structureType === STRUCTURE_ROAD) ||\r\n                        obj.type === LOOK_CONSTRUCTION_SITES);\r\n            });\r\n\r\n            if (!road.length) {\r\n                creep.room.createConstructionSite(creep.pos, STRUCTURE_ROAD);\r\n            }\r\n        }\r\n    }\r\n\r\n    public updateInfrastructure() {\r\n        _.forOwn(Game.rooms, (room) => {\r\n            if (_.isUndefined(room.memory.repairQueue)) {\r\n                room.memory.repairQueue = [];\r\n            }\r\n            if (_.isUndefined(room.memory.spawnQueue)) {\r\n                room.memory.spawnQueue = [];\r\n            }\r\n            if (_.isUndefined(room.memory.creepCount)) {\r\n                room.memory.creepCount = {};\r\n            }\r\n        });\r\n\r\n        if (_.isUndefined(Memory.harvestedSources)) {\r\n            Memory.harvestedSources = {};\r\n        }\r\n        if (_.isUndefined(Memory.autoBuildRoads)) {\r\n            Memory.autoBuildRoads = true;\r\n        }\r\n        if (_.isUndefined(Memory.maxWallHits)) {\r\n            Memory.maxWallHits = 100000;\r\n        }\r\n        if (_.isUndefined(Memory.maxRampartHits)) {\r\n            Memory.maxRampartHits = 30000;\r\n        }\r\n    }\r\n}\r\n\r\nexport const utils = new Utils();\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--3-0!./~/source-map-loader!./src/utils.ts","import * as _ from \"lodash\";\r\n\r\nimport * as Profiler from \"../screeps-typescript-profiler\";\r\n\r\nimport {CARRIER, HARVESTER, rolesModule as roles} from \"./roles\";\r\nimport {Messages, utils} from \"./utils\";\r\n\r\nglobal.Profiler = Profiler.init();\r\n\r\n@Profiler.profile\r\nclass LoopFunctions {\r\n    public findDamagedStructures() {\r\n        _.forOwn(Game.rooms, (room) => {\r\n            room.find(FIND_STRUCTURES, {\r\n                filter: (struct: Structure) => {\r\n                    if ((struct.structureType === STRUCTURE_WALL && struct.hits < Memory.maxWallHits) ||\r\n                        (struct.structureType === STRUCTURE_RAMPART && struct.hits < Memory.maxRampartHits / 2) ||\r\n                        (struct.structureType === STRUCTURE_CONTAINER && struct.hits < struct.hitsMax - 50000) ||\r\n                        (struct.structureType !== STRUCTURE_RAMPART && struct.structureType !== STRUCTURE_WALL &&\r\n                            struct.hits < struct.hitsMax / 2)) { utils.enqueueStructure(room, struct); }\r\n                    return false;\r\n                }}); });\r\n    }\r\n\r\n    public towerLogic() {\r\n        _.forOwn(Game.structures, (tower: Tower) => {\r\n            if (tower.structureType === STRUCTURE_TOWER) {\r\n                const closestHostile: Creep | null = tower.pos.findClosestByRange(FIND_HOSTILE_CREEPS, {\r\n                    filter: (creep: Creep) => {\r\n                        return creep.pos.inRangeTo(tower.pos, tower.room.memory.towerActive ? 15 : 7);\r\n                    }\r\n                });\r\n                if (closestHostile) {\r\n                    tower.room.memory.towerActive = true;\r\n                    tower.attack(closestHostile);\r\n                } else {\r\n                    tower.room.memory.towerActive = false;\r\n                }\r\n\r\n                const closestDamagedCreep: Creep | null = tower.pos.findClosestByRange(FIND_MY_CREEPS, {\r\n                    filter: (creep: Creep) => {\r\n                        return creep.hits < creep.hitsMax / 3;\r\n                    }\r\n                });\r\n                if (closestDamagedCreep) {\r\n                    tower.heal(closestDamagedCreep);\r\n                }\r\n\r\n                if (700 < tower.energy) {\r\n                    const closestDamagedStructure: Structure | null = tower.pos.findClosestByRange(FIND_STRUCTURES, {\r\n                        filter: (structure: Structure) => {\r\n                            return (structure.structureType === STRUCTURE_RAMPART &&\r\n                                    structure.hits < Memory.maxRampartHits)\r\n                                || (structure.structureType !== STRUCTURE_WALL &&\r\n                                    structure.structureType !== STRUCTURE_RAMPART &&\r\n                                    structure.hits < structure.hitsMax / 3);\r\n                        }\r\n                    });\r\n                    if (closestDamagedStructure) {\r\n                        tower.repair(closestDamagedStructure);\r\n                    }\r\n                }\r\n\r\n                // if nothing to do heal damaged creeps\r\n                const damagedCreep: Creep | null = tower.pos.findClosestByRange(FIND_MY_CREEPS, {\r\n                    filter: (creep: Creep) => {\r\n                        return creep.hits < creep.hitsMax;\r\n                    }\r\n                });\r\n                if (damagedCreep) {\r\n                    tower.heal(damagedCreep);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public creepActions() {\r\n        _.forOwn(Game.creeps, (creep) => {\r\n            roles.run(creep);\r\n        });\r\n    }\r\n}\r\n\r\nconst main = new LoopFunctions();\r\n\r\nmodule.exports.loop = () => {\r\n    utils.updateInfrastructure();\r\n\r\n    utils.clearMemory();\r\n\r\n    main.findDamagedStructures();\r\n\r\n    roles.countCreeps();\r\n\r\n    _.forOwn(Game.rooms, (room) => {\r\n        if (room.controller) {\r\n\r\n            if (Object.getOwnPropertyNames(Game.creeps).length === 0) {\r\n                room.memory.spawnQueue = [];\r\n                room.memory.spawnQueue.unshift({\r\n                    body: [CARRY, MOVE],\r\n                    role: CARRIER\r\n                });\r\n                room.memory.spawnQueue.unshift({\r\n                    body: [CARRY, WORK, WORK, MOVE],\r\n                    role: HARVESTER\r\n                });\r\n            }\r\n\r\n            roles.spawn(room);\r\n        }\r\n    });\r\n\r\n    _.forOwn(Game.spawns, (spawn) => {\r\n        roles.processSpawnQueue(spawn);\r\n\r\n        if (spawn.spawning) {\r\n            const spawningCreep = Game.creeps[spawn.spawning.name];\r\n            spawn.room.visual.text(\r\n                Messages.CONSTRUCT_SYM + \" \" + spawningCreep.memory.role,\r\n                spawn.pos.x + 1,\r\n                spawn.pos.y,\r\n                {align: \"left\", opacity: 0.8});\r\n        }\r\n    });\r\n\r\n    main.towerLogic();\r\n\r\n    main.creepActions();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--3-0!./~/source-map-loader!./src/main.ts","/* tslint:disable:ban-types */\r\nexport function init(): Profiler {\r\n  const defaults = {\r\n    data: {},\r\n    total: 0,\r\n  };\r\n\r\n  if (!Memory.profiler) { Memory.profiler = defaults; }\r\n\r\n  const cli: Profiler = {\r\n    clear() {\r\n      const running = isEnabled();\r\n      Memory.profiler = defaults;\r\n      if (running) { Memory.profiler.start = Game.time; }\r\n      return \"Profiler Memory cleared\";\r\n    },\r\n\r\n    output() {\r\n      outputProfilerData();\r\n      return \"Done\";\r\n    },\r\n\r\n    start() {\r\n      Memory.profiler.start = Game.time;\r\n      return \"Profiler started\";\r\n    },\r\n\r\n    status() {\r\n      if (isEnabled()) {\r\n        return \"Profiler is running\";\r\n      }\r\n      return \"Profiler is stopped\";\r\n    },\r\n\r\n    stop() {\r\n      if (!isEnabled()) { return; }\r\n      const timeRunning = Game.time - Memory.profiler.start!;\r\n      Memory.profiler.total += timeRunning;\r\n      delete Memory.profiler.start;\r\n      return \"Profiler stopped\";\r\n    },\r\n    \r\n    toString() {\r\n       return \"Profiler.start() - Starts the profiler\\n\" +\r\n          \"Profiler.stop() - Stops/Pauses the profiler\\n\" +\r\n          \"Profiler.status() - Returns whether is profiler is currently running or not\\n\" +\r\n          \"Profiler.output() - Pretty-prints the collected profiler data to the console\\n\" +\r\n          this.status();\r\n     },\r\n  };\r\n\r\n  return cli;\r\n}\r\n\r\nfunction wrapFunction(obj: object, key: PropertyKey, className?: string) {\r\n  const descriptor = Reflect.getOwnPropertyDescriptor(obj, key);\r\n  if (!descriptor || descriptor.get || descriptor.set) { return; }\r\n\r\n  if (key === \"constructor\") { return; }\r\n\r\n  const originalFunction = descriptor.value;\r\n  if (!originalFunction || typeof originalFunction !== \"function\") { return; }\r\n\r\n  // set a key for the object in memory\r\n  if (!className) { className = obj.constructor ? `${obj.constructor.name}` : \"\"; }\r\n  const memKey = className + `:${key}`;\r\n\r\n  // set a tag so we don't wrap a function twice\r\n  const savedName = `__${key}__`;\r\n  if (Reflect.has(obj, savedName)) { return; }\r\n\r\n  Reflect.set(obj, savedName, originalFunction);\r\n\r\n  ///////////\r\n\r\n  Reflect.set(obj, key, function(this: any, ...args: any[]) {\r\n    if (isEnabled()) {\r\n      const start = Game.cpu.getUsed();\r\n      const result = originalFunction.apply(this, args);\r\n      const end = Game.cpu.getUsed();\r\n      record(memKey, end - start);\r\n      return result;\r\n    }\r\n    return originalFunction.apply(this, args);\r\n  });\r\n}\r\n\r\nexport function profile(target: Function): void;\r\nexport function profile(target: object, key: string | symbol, _descriptor: TypedPropertyDescriptor<Function>): void;\r\nexport function profile(\r\n  target: object | Function,\r\n  key?: string | symbol,\r\n  _descriptor?: TypedPropertyDescriptor<Function>,\r\n): void {\r\n  if (!__PROFILER_ENABLED__) { return; }\r\n\r\n  if (key) {\r\n    // case of method decorator\r\n    wrapFunction(target, key);\r\n    return;\r\n  }\r\n\r\n  // case of class decorator\r\n\r\n  const ctor = target as any;\r\n  if (!ctor.prototype) { return; }\r\n\r\n  const className = ctor.name;\r\n  Reflect.ownKeys(ctor.prototype).forEach((k) => {\r\n    wrapFunction(ctor.prototype, k, className);\r\n  });\r\n\r\n}\r\n\r\nfunction isEnabled(): boolean {\r\n  return Memory.profiler.start !== undefined;\r\n}\r\n\r\nfunction record(key: string | symbol, time: number) {\r\n  if (!Memory.profiler.data[key]) {\r\n    Memory.profiler.data[key] = {\r\n      calls: 0,\r\n      time: 0,\r\n    };\r\n  }\r\n  Memory.profiler.data[key].calls++;\r\n  Memory.profiler.data[key].time += time;\r\n}\r\n\r\ninterface OutputData {\r\n  name: string;\r\n  calls: number;\r\n  cpuPerCall: number;\r\n  callsPerTick: number;\r\n  cpuPerTick: number;\r\n}\r\n\r\nfunction outputProfilerData() {\r\n  let totalTicks = Memory.profiler.total;\r\n  if (Memory.profiler.start) {\r\n    totalTicks += Game.time - Memory.profiler.start;\r\n  }\r\n\r\n  ///////\r\n  // Process data\r\n  let totalCpu = 0;  // running count of average total CPU use per tick\r\n  let calls: number;\r\n  let time: number;\r\n  let result: Partial<OutputData>;\r\n  const data = Reflect.ownKeys(Memory.profiler.data).map((key) => {\r\n    calls = Memory.profiler.data[key].calls;\r\n    time = Memory.profiler.data[key].time;\r\n    result = {};\r\n    result.name = `${key}`;\r\n    result.calls = calls;\r\n    result.cpuPerCall = time / calls;\r\n    result.callsPerTick = calls / totalTicks;\r\n    result.cpuPerTick = time / totalTicks;\r\n    totalCpu += result.cpuPerTick;\r\n    return result as OutputData;\r\n  });\r\n\r\n  data.sort((lhs, rhs) => rhs.cpuPerTick - lhs.cpuPerTick);\r\n\r\n  ///////\r\n  // Format data\r\n  let output = \"\";\r\n\r\n  // get function name max length\r\n  const longestName = (_.max(data, (d) => d.name.length)).name.length + 2;\r\n\r\n  //// Header line\r\n  output += _.padRight(\"Function\", longestName);\r\n  output += _.padLeft(\"Tot Calls\", 12);\r\n  output += _.padLeft(\"CPU/Call\", 12);\r\n  output += _.padLeft(\"Calls/Tick\", 12);\r\n  output += _.padLeft(\"CPU/Tick\", 12);\r\n  output += _.padLeft(\"% of Tot\\n\", 12);\r\n\r\n  ////  Data lines\r\n  data.forEach((d) => {\r\n    output += _.padRight(`${d.name}`, longestName);\r\n    output += _.padLeft(`${d.calls}`, 12);\r\n    output += _.padLeft(`${d.cpuPerCall.toFixed(2)}ms`, 12);\r\n    output += _.padLeft(`${d.callsPerTick.toFixed(2)}`, 12);\r\n    output += _.padLeft(`${d.cpuPerTick.toFixed(2)}ms`, 12);\r\n    output += _.padLeft(`${(d.cpuPerTick / totalCpu * 100).toFixed(0)} %\\n`, 12);\r\n  });\r\n\r\n  //// Footer line\r\n  output += `${totalTicks} total ticks measured`;\r\n  output += `\\t\\t\\t${totalCpu.toFixed(2)} average CPU profiled per tick`;\r\n  console.log(output);\r\n}\r\n\r\n// debugging\r\n// function printObject(obj: object) {\r\n//   const name = obj.constructor ? obj.constructor.name : (obj as any).name;\r\n//   console.log(\"  Keys of :\", name, \":\");\r\n//   Reflect.ownKeys(obj).forEach((k) => {\r\n//     try {\r\n//       console.log(`    ${k}: ${Reflect.get(obj, k)}`);\r\n//     } catch (e) {\r\n//       // nothing\r\n//     }\r\n//   });\r\n// }\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--3-0!./~/source-map-loader!./screeps-typescript-profiler/Profiler/Profiler.ts","import {Dictionary} from \"lodash\";\r\n\r\nexport const limits: Dictionary<number> = {\r\n    builder:   2,\r\n    carrier:   3,\r\n    claimer:   2,\r\n    harvester: 2,\r\n    upgrader:  1\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--3-0!./~/source-map-loader!./src/limits.ts","import * as _ from \"lodash\";\r\n\r\nimport {Messages, utils} from \"./utils\";\r\n\r\nimport {Role} from \"./Role\";\r\n\r\nimport { profile } from \"../screeps-typescript-profiler\";\r\n\r\n@profile\r\nclass Builder implements Role {\r\n    /**\r\n     * @override\r\n     */\r\n    public body(availEnergy: number) {\r\n        if (availEnergy < 350) {\r\n            return [WORK, CARRY, CARRY, MOVE]; // 250\r\n        } else if (availEnergy < 450) {\r\n            return [WORK, CARRY, CARRY, MOVE, MOVE]; // 350\r\n        } else if (availEnergy < 550) {\r\n            return [WORK, WORK, CARRY, CARRY, MOVE, MOVE, MOVE]; // 450\r\n        } else if (availEnergy < 600) {\r\n            return [WORK, WORK, WORK, CARRY, CARRY, MOVE, MOVE, MOVE]; // 550\r\n        } else if (availEnergy < 650) {\r\n            return [WORK, WORK, WORK, CARRY, CARRY, CARRY, MOVE, MOVE, MOVE]; // 600\r\n        } else if (availEnergy < 750) {\r\n            return [WORK, WORK, WORK, CARRY, CARRY, CARRY, MOVE, MOVE, MOVE, MOVE]; // 650\r\n        } else {\r\n            return [WORK, WORK, WORK, WORK, CARRY, CARRY, CARRY, MOVE, MOVE, MOVE, MOVE]; // 750\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    public run(creep: Creep) {\r\n        utils.tryBuildRoad(creep);\r\n\r\n        if (!creep.memory.building && !creep.memory.energyTarget && utils.navigateToDesignatedRoom(creep)\r\n            && creep.memory.operateInRoom) {\r\n            utils.moveTo(creep, new RoomPosition(25, 25, creep.memory.operateInRoom));\r\n            return;\r\n        }\r\n\r\n        if (creep.memory.building && creep.carry.energy === 0) {\r\n            creep.memory.building = false;\r\n            creep.memory.energyTarget = \"\";\r\n            creep.say(Messages.HARVEST);\r\n        }\r\n\r\n        if (!creep.memory.building && creep.carry.energy === creep.carryCapacity) {\r\n            creep.memory.building = true;\r\n            creep.say(Messages.BUILD);\r\n        }\r\n\r\n        if (creep.memory.building) {\r\n            let target = Game.getObjectById(creep.memory.buildTarget) as Structure | ConstructionSite | null;\r\n            if (!target) {\r\n                target = utils.shiftStructure(creep, true);\r\n\r\n                if (!target) {\r\n                    target = utils.findConstructionSite(creep);\r\n                }\r\n\r\n                if (!target) {\r\n                    target = utils.shiftStructure(creep, false);\r\n                }\r\n\r\n                if (target) {\r\n                    creep.memory.buildTarget = target.id;\r\n                } else {\r\n                    creep.say(\"\\uD83D\\uDEA7 nothing\");\r\n                    creep.memory.buildTarget = \"\";\r\n                    creep.memory.energyTarget = \"\";\r\n                    creep.memory.building = false;\r\n                }\r\n            }\r\n\r\n            if (target instanceof Structure) {\r\n                if ((target.structureType !== STRUCTURE_WALL &&\r\n                        target.structureType !== STRUCTURE_RAMPART && target.hits < target.hitsMax) ||\r\n                    (target.structureType === STRUCTURE_WALL && target.hits < Memory.maxWallHits) ||\r\n                    (target.structureType === STRUCTURE_RAMPART && target.hits < Memory.maxRampartHits)) {\r\n                    if (creep.repair(target) === ERR_NOT_IN_RANGE) {\r\n                        utils.moveTo(creep, target.pos);\r\n                    }\r\n                } else {\r\n                    creep.memory.buildTarget = \"\";\r\n                    creep.memory.building = false;\r\n                }\r\n            } else if (target instanceof ConstructionSite) {\r\n                if (creep.build(target) === ERR_NOT_IN_RANGE) {\r\n                    utils.moveTo(creep, target.pos);\r\n                }\r\n            } else {\r\n                creep.say(\"\\uD83D\\uDEA7 strange\");\r\n                creep.memory.buildTarget = \"\";\r\n                creep.memory.building = false;\r\n            }\r\n        } else {\r\n            if (creep.carry.energy < creep.carryCapacity) {\r\n                const target = utils.getEnergyStorageTarget(creep);\r\n                if (target) {\r\n                    const src = creep.pos.findInRange([target], 1);\r\n                    if (src.length) {\r\n                        utils.getEnergy(creep, src[0]);\r\n                    } else {\r\n                        utils.moveTo(creep, target.pos);\r\n                    }\r\n                } else {\r\n                    creep.say(\"No energy\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} type\r\n     * @param {Creep} creep\r\n     * @returns {ConstructionSite}\r\n     */\r\n    private findConstructionSite(type: StructureConstant, creep: Creep) {\r\n        let target = null;\r\n\r\n        const sites = _.filter(Game.constructionSites, (site: Structure) => {\r\n            return  site.structureType === type && site.pos.roomName === creep.memory.operateInRoom;\r\n        });\r\n\r\n        if (sites.length) {\r\n            target = creep.pos.findClosestByPath(sites);\r\n            if (!target) {\r\n                target = sites[0];\r\n            }\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n}\r\n\r\nexport const roleBuilder: Role = new Builder();\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--3-0!./~/source-map-loader!./src/role.builder.ts","import * as _ from \"lodash\";\r\n\r\nimport {Messages, utils} from \"./utils\";\r\n\r\nimport {Role} from \"./Role\";\r\n\r\nimport { profile } from \"../screeps-typescript-profiler\";\r\n\r\n/**\r\n *\r\n * @class\r\n * @extends {Role}\r\n */\r\n@profile\r\nclass Carrier implements Role {\r\n    /**\r\n     * @override\r\n     */\r\n    public body(availEnergy: number) {\r\n        let parts;\r\n        if (availEnergy < 300) {\r\n            parts = 6;\r\n        } else if (750 < availEnergy) {\r\n            parts = 15;\r\n        } else {\r\n            parts = Math.floor(availEnergy / 50);\r\n        }\r\n\r\n        const body = new Array(parts);\r\n        const moveParts = Math.ceil(parts / 3);\r\n\r\n        for (let i = 0; i < parts; ++i) {\r\n            body[i] = i < moveParts ? MOVE : CARRY;\r\n        }\r\n        return body;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    public run(creep: Creep) {\r\n        utils.tryBuildRoad(creep);\r\n\r\n        if (!creep.memory.hauling && !creep.memory.energyTarget && utils.navigateToDesignatedRoom(creep)\r\n             && creep.memory.operateInRoom) {\r\n            utils.moveTo(creep, new RoomPosition(25, 25, creep.memory.operateInRoom));\r\n            return;\r\n        }\r\n\r\n        if (creep.memory.hauling && creep.carry.energy === 0) {\r\n            creep.memory.hauling = false;\r\n            creep.memory.energyTarget = \"\";\r\n            creep.say(Messages.PICKUP);\r\n        }\r\n\r\n        if (!creep.memory.hauling && creep.carry.energy === creep.carryCapacity) {\r\n            creep.memory.hauling = true;\r\n            creep.memory.energyTarget = \"\";\r\n            creep.say(Messages.DISTRIBUTE);\r\n        }\r\n\r\n        if (creep.memory.hauling) {\r\n            const target = this.getStoreTarget(creep);\r\n            if (target && creep.transfer(target, RESOURCE_ENERGY) === ERR_NOT_IN_RANGE) {\r\n                utils.moveTo(creep, target.pos);\r\n            } else {\r\n                creep.memory.energyTarget = \"\";\r\n            }\r\n        } else {\r\n            const target = this.getEnergyTarget(creep);\r\n            if (target && utils.getEnergy(creep, target) === ERR_NOT_IN_RANGE) {\r\n                utils.moveTo(creep, target.pos);\r\n            } else {\r\n                creep.memory.energyTarget = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Creep} creep\r\n     * @return {Resource|Source|Structure}\r\n     */\r\n    private getEnergyTarget(creep: Creep): Resource | Source | Structure | null {\r\n        let target: Structure | Resource | Source | null = Game.getObjectById(creep.memory.energyTarget);\r\n\r\n        if (target instanceof Source && creep.pos.inRangeTo(target.pos, 2)) {\r\n            target = null;\r\n        }\r\n\r\n        if (!target) {\r\n            // dropped energy\r\n            const drops: Resource[] = creep.room.find(FIND_DROPPED_RESOURCES, {\r\n                filter: (drop: Resource) => {\r\n                    return drop.resourceType === RESOURCE_ENERGY && 0 < drop.amount;\r\n                }\r\n            });\r\n\r\n            target = _.sortBy(drops, (drop: Resource) => {\r\n                return -drop.amount;\r\n            })[0];\r\n        }\r\n\r\n        if (!target) {\r\n            // containers near sources\r\n            const conts: Container[] = creep.room.find(FIND_STRUCTURES, {\r\n                filter: (struct: Container) => {\r\n                    return struct.structureType === STRUCTURE_CONTAINER &&\r\n                        struct.id !== creep.room.memory.controllerCont && 0 < struct.store.energy;\r\n                }\r\n            });\r\n\r\n            // most full container\r\n            target = _.sortBy(conts, (cont) => {\r\n                return cont.storeCapacity - _.sum(cont.store);\r\n            })[0];\r\n        }\r\n\r\n        if (!target) {\r\n            const targets: Storage[] = creep.room.find(FIND_STRUCTURES, {\r\n                filter: (store: Storage) => {\r\n                    return store.structureType === STRUCTURE_STORAGE && 0 < store.store.energy;\r\n                }\r\n            });\r\n            target = targets[0];\r\n        }\r\n\r\n        if (!target) {\r\n            target = creep.pos.findClosestByPath(FIND_SOURCES_ACTIVE, {\r\n                maxOps: 100\r\n            });\r\n            if (!target) {\r\n                const targets: Source[] = creep.room.find(FIND_SOURCES);\r\n                target = targets[0];\r\n            }\r\n        }\r\n\r\n        if (target) {\r\n            creep.memory.energyTarget = target.id;\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Creep} creep\r\n     * @return {Spawn|Structure}\r\n     */\r\n    private getStoreTarget(creep: Creep): Creep | Structure | null {\r\n        let target: Creep | Structure | null = Game.getObjectById(creep.memory.energyTarget);\r\n\r\n        if (!target) {\r\n            // console.log('Carrier ' + creep.name + ' looking for spawns and extensions');\r\n            if (creep.room.energyAvailable < creep.room.energyCapacityAvailable) {\r\n                target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n                    filter: (struct: Spawn | Extension) => {\r\n                        return (struct.structureType === STRUCTURE_SPAWN ||\r\n                                 struct.structureType === STRUCTURE_EXTENSION)\r\n                            && struct.energy < struct.energyCapacity &&\r\n                            creep.memory.operateInRoom === struct.pos.roomName;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n            // console.log('Harvester ' + creep.name + ' harvesting target: ' + target.id);\r\n\r\n        if (!target) {\r\n            // containers near controllers\r\n            // console.log('Carrier ' + creep.name + ' looking for controller container');\r\n\r\n            const designatedRoom = Game.rooms[creep.memory.operateInRoom];\r\n\r\n            const cont: Container | null =\r\n                designatedRoom ? Game.getObjectById(designatedRoom.memory.controllerCont) : null;\r\n            if (cont && 500 < cont.storeCapacity - _.sum(cont.store)) {\r\n                target = cont;\r\n            }\r\n        }\r\n\r\n        if (!target) {\r\n            // console.log('Carrier ' + creep.name + ' looking for towers');\r\n            const towers = _.filter(Game.structures, (struct: Tower) => {\r\n                return struct.structureType === STRUCTURE_TOWER && struct.room.name === creep.memory.operateInRoom &&\r\n                    0 <= struct.energyCapacity - struct.energy - 300;\r\n            });\r\n\r\n            // emptiest tower\r\n            target = _.sortBy(towers, (tower: Tower) => {\r\n                return tower.energyCapacity + tower.energy;\r\n            })[0];\r\n        }\r\n\r\n        if (!target) {\r\n            // looking for storage\r\n            // console.log('Carrier ' + creep.name + ' looking for storage');\r\n            const storages: Storage[] = creep.room.find(FIND_STRUCTURES, {\r\n                filter: (struct: Storage) => {\r\n                    return struct.structureType === STRUCTURE_STORAGE &&\r\n                        0 < struct.storeCapacity - _.sum(struct.store);\r\n                }\r\n            });\r\n            target = storages[0];\r\n        }\r\n        if (!target) {\r\n            // console.log('Carrier ' + creep.name + ' looking for sources');\r\n\r\n            const targets: Array<Spawn | Extension> = creep.room.find(FIND_STRUCTURES, {\r\n                filter: (spawn: Spawn) => {\r\n                    return (spawn.structureType === STRUCTURE_SPAWN || spawn.structureType === STRUCTURE_EXTENSION) &&\r\n                        spawn.energy < spawn.energyCapacity && creep.memory.operateInRoom === spawn.pos.roomName;\r\n                }\r\n            });\r\n            target = targets[0];\r\n        }\r\n\r\n        if (target) {\r\n            creep.memory.energyTarget = target.id;\r\n        }\r\n\r\n        return target;\r\n    }\r\n}\r\n\r\nexport const roleCarrier: Role = new Carrier();\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--3-0!./~/source-map-loader!./src/role.carrier.ts","import * as _ from \"lodash\";\r\n\r\nimport {utils} from \"./utils\";\r\n\r\nimport {Role} from \"./Role\";\r\n\r\nimport { profile } from \"../screeps-typescript-profiler\";\r\n\r\n/**\r\n *\r\n * @class\r\n * @extends {Role}\r\n */\r\n@profile\r\nclass Claimer implements Role {\r\n    /**\r\n     * @override\r\n     */\r\n    public body(availEnergy: number) {\r\n        return [MOVE, MOVE, CLAIM];\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    public run(creep: Creep) {\r\n        utils.tryBuildRoad(creep);\r\n\r\n        let flag = Game.flags[\"claim\"];\r\n        if (!flag) {\r\n            flag = Game.flags[\"reserve\"];\r\n        }\r\n\r\n        const sameRoom = flag && creep.room.name === flag.pos.roomName;\r\n\r\n        if (!flag) {\r\n            delete(creep.memory.claimTarget);\r\n        }\r\n\r\n        if (flag && !sameRoom) {\r\n            utils.moveTo(creep, flag.pos);\r\n        }\r\n\r\n        if (flag && sameRoom) {\r\n            const structs = creep.room.lookForAt(LOOK_STRUCTURES, flag.pos);\r\n            if (structs.length) {\r\n                _.forEach(structs, (str: Structure) => {\r\n                    if (str.structureType === STRUCTURE_CONTROLLER) {\r\n                        creep.memory.claimTarget = str.id;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (creep.memory.claimTarget) {\r\n            // Move to target & claim\r\n            const controller: Controller | null = Game.getObjectById(creep.memory.claimTarget);\r\n            if (controller) {\r\n                if (flag.name === \"claim\") {\r\n                    if (creep.claimController(controller) !== OK) {\r\n                        utils.moveTo(creep, controller.pos);\r\n                    }\r\n                } else {\r\n                    if (creep.reserveController(controller) !== OK) {\r\n                        utils.moveTo(creep, controller.pos);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const roleClaimer: Role = new Claimer();\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--3-0!./~/source-map-loader!./src/role.claimer.ts","import * as _ from \"lodash\";\r\n\r\nimport {Messages, utils} from \"./utils\";\r\n\r\nimport {Role} from \"./Role\";\r\n\r\nimport { profile } from \"../screeps-typescript-profiler\";\r\n\r\n@profile\r\nclass Harvester implements Role {\r\n    /**\r\n     * @override\r\n     */\r\n    public body(availEnergy: number) {\r\n        if (availEnergy < 350) {\r\n            return [WORK, WORK, CARRY, MOVE]; // 300\r\n        } else if (availEnergy < 400) {\r\n            return [WORK, WORK, CARRY, MOVE, MOVE]; // 350\r\n        } else if (availEnergy < 500) {\r\n            return [WORK, WORK, CARRY, MOVE, MOVE, MOVE]; // 400\r\n        } else if (availEnergy < 600) {\r\n            return [WORK, WORK, WORK, CARRY, MOVE, MOVE, MOVE]; // 500\r\n        } else if (availEnergy < 700) {\r\n            return [WORK, WORK, WORK, WORK, CARRY, MOVE, MOVE, MOVE]; // 600\r\n        } else {\r\n            return [WORK, WORK, WORK, WORK, WORK, CARRY, MOVE, MOVE, MOVE]; // 700\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    public run(creep: Creep) {\r\n        utils.tryBuildRoad(creep);\r\n\r\n        let target: Source | null = Game.getObjectById(creep.memory.target);\r\n\r\n        if (!target) {\r\n\r\n            target = this.findSource(creep);\r\n\r\n            if (target) {\r\n\r\n                if (target.room.name !== creep.room.name) {\r\n                    console.log(\"Harvester found target in other room: \" + target.room);\r\n                }\r\n\r\n                Memory.harvestedSources[target.id] = target.id;\r\n                creep.memory.target = target.id;\r\n                creep.say(Messages.HARVEST);\r\n            }\r\n        }\r\n\r\n        if (0 < creep.carry.energy) {\r\n            // console.log('Harvester ' + creep.name + ' unloading');// JSON.stringify(target, null, 4));\r\n            const dst: Structure[] = creep.pos.findInRange(FIND_STRUCTURES, 1, {\r\n                filter: (struct: Link | Container) => {\r\n                    return (struct.structureType === STRUCTURE_LINK && struct.energy < struct.energyCapacity) ||\r\n                        (struct.structureType === STRUCTURE_CONTAINER && _.sum(struct.store) < struct.storeCapacity);\r\n                }\r\n            });\r\n\r\n            if (dst.length) {\r\n                creep.transfer(dst[0], RESOURCE_ENERGY);\r\n            } else {\r\n                creep.drop(RESOURCE_ENERGY);\r\n            }\r\n        }\r\n        // console.log('Harvester ' + creep.name + ' harvesting target: ' + target.id);\r\n        // JSON.stringify(target, null, 4));\r\n        if (target) {\r\n            const err = creep.harvest(target);\r\n            if (err === ERR_NOT_IN_RANGE) {\r\n                utils.moveTo(creep, target.pos);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private findSource(creep: Creep): Source | null {\r\n        const sources: Source[] = creep.room.find(FIND_SOURCES, {\r\n            filter: (src: Source) => {\r\n                return !Memory.harvestedSources.hasOwnProperty(src.id);\r\n            }\r\n        });\r\n\r\n        return sources[0];\r\n    }\r\n}\r\n\r\nexport const roleHarvester: Role = new Harvester();\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--3-0!./~/source-map-loader!./src/role.harvester.ts","import {Messages, utils} from \"./utils\";\r\n\r\nimport {Role} from \"./Role\";\r\n\r\nimport { profile } from \"../screeps-typescript-profiler\";\r\n\r\nclass Upgrader implements Role {\r\n    /**\r\n     * @override\r\n     */\r\n    @profile\r\n    public body(availEnergy: number) {\r\n        if (availEnergy < 350) {\r\n            return [WORK, CARRY, MOVE, MOVE]; // 250\r\n        } else if (availEnergy < 400) {\r\n            return [WORK, WORK, CARRY, MOVE, MOVE]; // 350\r\n        } else if (availEnergy < 500) {\r\n            return [WORK, WORK, CARRY, MOVE, MOVE, MOVE]; // 400\r\n        } else if (availEnergy < 600) {\r\n            return [WORK, WORK, WORK, CARRY, MOVE, MOVE, MOVE]; // 500\r\n        } else if (availEnergy < 700) {\r\n            return [WORK, WORK, WORK, WORK, CARRY, MOVE, MOVE, MOVE]; // 600\r\n        } else {\r\n            return [WORK, WORK, WORK, WORK, WORK, CARRY, MOVE, MOVE, MOVE]; // 700\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    @profile\r\n    public run(creep: Creep) {\r\n        utils.tryBuildRoad(creep);\r\n\r\n        if (utils.navigateToDesignatedRoom(creep) && creep.memory.operateInRoom) {\r\n            utils.moveTo(creep, new RoomPosition(25, 25, creep.memory.operateInRoom));\r\n        } else {\r\n            if (creep.memory.upgrading && creep.carry.energy === 0) {\r\n                creep.memory.upgrading = false;\r\n                creep.say(Messages.HARVEST);\r\n            }\r\n            if (!creep.memory.upgrading && creep.carry.energy === creep.carryCapacity) {\r\n                creep.memory.upgrading = true;\r\n                creep.memory.energyTarget = \"\";\r\n                creep.say(Messages.UPGRADE);\r\n            }\r\n\r\n            if (creep.memory.upgrading && creep.room.controller) {\r\n                if (creep.upgradeController(creep.room.controller) === ERR_NOT_IN_RANGE) {\r\n                    utils.moveTo(creep, creep.room.controller.pos);\r\n                }\r\n            } else {\r\n                const target = utils.getEnergyStorageTarget(creep);\r\n                if (target) {\r\n                    const src = creep.pos.findInRange([target], 1);\r\n                    if (src.length) {\r\n                        utils.getEnergy(creep, src[0]);\r\n                    } else {\r\n                        utils.moveTo(creep, target.pos);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const roleUpgrader: Role = new Upgrader();\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--3-0!./~/source-map-loader!./src/role.upgrader.ts","import * as _ from \"lodash\";\r\n\r\nimport { profile } from \"../screeps-typescript-profiler\";\r\n\r\nimport {limits} from \"./limits\";\r\nimport {Role} from \"./Role\";\r\n\r\nimport {roleBuilder} from \"./role.builder\";\r\nimport {roleCarrier} from \"./role.carrier\";\r\nimport {roleClaimer} from \"./role.claimer\";\r\nimport {roleHarvester} from \"./role.harvester\";\r\nimport {roleUpgrader} from \"./role.upgrader\";\r\n\r\nexport interface Roles extends _.Dictionary<Role> {\r\n    builder: Role;\r\n    carrier: Role;\r\n    claimer: Role;\r\n    harvester: Role;\r\n    upgrader: Role;\r\n}\r\n\r\nexport type CreepRole = keyof Roles;\r\n\r\nexport const BUILDER: CreepRole = \"builder\";\r\nexport const CARRIER: CreepRole = \"carrier\";\r\nexport const CLAIMER: CreepRole = \"claimer\";\r\nexport const HARVESTER: CreepRole = \"harvester\";\r\nexport const UPGRADER: CreepRole = \"upgrader\";\r\n\r\nexport const roles: Roles = {\r\n    builder:   roleBuilder,\r\n    carrier:   roleCarrier,\r\n    claimer:   roleClaimer,\r\n    harvester: roleHarvester,\r\n    upgrader:  roleUpgrader\r\n};\r\n\r\nexport interface BodySpec {\r\n    body: BodyPartConstant[];\r\n    role: CreepRole;\r\n}\r\n\r\n@profile\r\nexport class RolesModule {\r\n    public countCreeps() {\r\n        _.forOwn(roles, (role, roleName: string) => {\r\n            _.forOwn(Memory.rooms, (roomMem) => {\r\n                roomMem.creepCount[roleName] = 0;\r\n            });\r\n        });\r\n\r\n        _.forOwn(Game.creeps, (creep) => {\r\n            if (!creep.memory.operateInRoom) {\r\n                Memory.rooms[creep.room.name].creepCount[creep.memory.role] += 1;\r\n            } else {\r\n                Memory.rooms[creep.memory.operateInRoom].creepCount[creep.memory.role] += 1;\r\n            }\r\n        });\r\n\r\n        _.forOwn(Memory.rooms, (roomMem) => {\r\n            _.forEach(roomMem.spawnQueue, (spec) => {\r\n                roomMem.creepCount[spec.role] += 1;\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     *  @type {function}\r\n     *\r\n     *  @param {StructureSpawn} spawn Spawn on which start spawning\r\n     */\r\n    public processSpawnQueue(spawn: Spawn) {\r\n        if (spawn.spawning) {\r\n            return;\r\n        }\r\n\r\n        const room = spawn.room;\r\n        const spec = room.memory.spawnQueue.shift();\r\n        if (spec) {\r\n            console.log(\"Processing spawn Q \" + spawn.name + \" \"\r\n                + JSON.stringify({room: room.name, role: spec.role}));\r\n\r\n            if (spawn.canCreateCreep(spec.body) === OK) {\r\n                const newName = spawn.createCreep(spec.body, undefined, {operateInRoom: room.name, role: spec.role});\r\n                console.log(\"Spawning new \" + spec.role + \": \" + newName);\r\n            } else if (\"claimer\" === spec.role) {\r\n                room.memory.spawnQueue.push(spec);\r\n            } else {\r\n                room.memory.spawnQueue.unshift(spec);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Creep} creep\r\n     */\r\n    public run(creep: Creep) {\r\n        roles[creep.memory.role].run(creep);\r\n    }\r\n\r\n    /**\r\n     *  @type {function}\r\n     *\r\n     *  @param {Room} room\r\n     *  @param {string|object} [role] Role of the new creep\r\n     *  @param {Array<string>} role.body Body of spawning creep\r\n     *  @param {string} role.role Role of spawning creep\r\n     */\r\n    public spawn(room: Room, role?: CreepRole | BodySpec) {\r\n        if (!role) {\r\n            _.forOwn(roles, (r, name: CreepRole) => {\r\n                if (name && room.memory.creepCount[name] < this.limit(name)) {\r\n                    const energy = room.energyAvailable;\r\n\r\n                    const body = r.body(energy);\r\n                    room.memory.spawnQueue.push({ body, role: name });\r\n                }\r\n            });\r\n        } else if (typeof role === \"string\") {\r\n            const energy = room.energyAvailable;\r\n\r\n            const body = roles[role].body(energy);\r\n            room.memory.spawnQueue.push({ body, role });\r\n        } else {\r\n            room.memory.spawnQueue.push(role);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} role\r\n     * @returns {number}\r\n     */\r\n    private limit(role: CreepRole): number {\r\n        if (role === \"claimer\") {\r\n            return _.isUndefined(Game.flags[\"claim\"]) && _.isUndefined(Game.flags[\"reserve\"])  ? 0 : limits[role];\r\n        } else {\r\n            return limits[role];\r\n        }\r\n    }\r\n}\r\n\r\nexport const rolesModule = new RolesModule();\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--3-0!./~/source-map-loader!./src/roles.ts"],"sourceRoot":""}